nav_mecanum_controller:
  left_front_wheel_name: {
    type: string,
    default_value: "left_front_wheel_joint",
    description: "Link names of the left side wheels",
  }
  left_rear_wheel_name: {
    type: string,
    default_value: "left_rear_wheel_joint",
    description: "Link names of the left side wheels",
  }
  right_front_wheel_name: {
    type: string,
    default_value: "right_front_wheel_joint",
    description: "Link names of the right side wheels",
  }
  right_rear_wheel_name: {
    type: string,
    default_value: "right_rear_wheel_joint",
    description: "Link names of the right side wheels",
  }
  wheel_separation_front_and_rear: {
    type: double,
    default_value: 0.20,
    description: "Distance between the wheels on the front and rear side of the robot. This is important to take the wheels slip into account when multiple wheels on each side are present. If there are more wheels then control signals for each side, you should enter number or control signals. For example, Husky has two wheels on each side, but they use one control signal, in this case '1' is the correct value of the parameter.",
  }
  wheel_separation_left_and_right: {
    type: double,
    default_value: 0.20,
    description: "Distance between the wheels on the left and right side of the robot. This is important to take the wheels slip into account when multiple wheels on each side are present. If there are more wheels then control signals for each side, you should enter number or control signals. For example, Husky has two wheels on each side, but they use one control signal, in this case '1' is the correct value of the parameter.",
  }

  wheel_radius: {
    type: double,
    default_value: 0.0,
    description: "Radius of a wheel, i.e., wheels size, used for transformation of linear velocity into wheel rotations. If this parameter is wrong the robot will move faster or slower then expected.",
  }
  odom_subscribe_topic: {
    type: string,
    default_value: "odom/filtered",
    description: "Name of the topic for odometry messages.",
  }
  publish_rate: {
    type: double,
    default_value: 50.0, # Hz
    description: "Publishing rate (Hz) of the odometry and TF messages.",
  }
  linear:
    max_velocity: {
      type: double,
      default_value: .NAN,
    }
    min_velocity: {
      type: double,
      default_value: .NAN,
    }
    max_acceleration: {
      type: double,
      default_value: .NAN,
    }
    min_acceleration: {
      type: double,
      default_value: .NAN,
    }

  angular:
    max_velocity: {
      type: double,
      default_value: .NAN,
    }
    min_velocity: {
      type: double,
      default_value: .NAN,
    }
    max_acceleration: {
      type: double,
      default_value: .NAN,
    }
    min_acceleration: {
      type: double,
      default_value: .NAN,
    }

